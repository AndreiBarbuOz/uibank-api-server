/* 
 * UiBank
 *
 * Sample banking API used for demoing UiPath Testing Automation. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: andrei.barbu@uipath.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing TransactionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class TransactionsApiTests
    {
        private TransactionsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TransactionsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TransactionsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TransactionsApi
            //Assert.IsInstanceOfType(typeof(TransactionsApi), instance, "instance is a TransactionsApi");
        }

        /// <summary>
        /// Test AddTransaction
        /// </summary>
        [Test]
        public void AddTransactionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? accountId = null;
            //RequestTransaction body = null;
            //instance.AddTransaction(accountId, body);
            
        }
        /// <summary>
        /// Test GetTransaction
        /// </summary>
        [Test]
        public void GetTransactionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? transactionId = null;
            //var response = instance.GetTransaction(transactionId);
            //Assert.IsInstanceOf<Transaction> (response, "response is Transaction");
        }
        /// <summary>
        /// Test ListTransactions
        /// </summary>
        [Test]
        public void ListTransactionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? accountId = null;
            //var response = instance.ListTransactions(accountId);
            //Assert.IsInstanceOf<List<Transaction>> (response, "response is List<Transaction>");
        }
    }

}
