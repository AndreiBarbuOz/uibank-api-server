/* 
 * UiBank
 *
 * Sample banking API used for demoing UiPath Testing Automation. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: andrei.barbu@uipath.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CustomersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CustomersApiTests
    {
        private CustomersApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CustomersApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CustomersApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CustomersApi
            //Assert.IsInstanceOfType(typeof(CustomersApi), instance, "instance is a CustomersApi");
        }

        /// <summary>
        /// Test AddCustomer
        /// </summary>
        [Test]
        public void AddCustomerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RequestCustomer body = null;
            //var response = instance.AddCustomer(body);
            //Assert.IsInstanceOf<Customer> (response, "response is Customer");
        }
        /// <summary>
        /// Test DeleteCustomer
        /// </summary>
        [Test]
        public void DeleteCustomerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? customerId = null;
            //instance.DeleteCustomer(customerId);
            
        }
        /// <summary>
        /// Test GetCustomerDetails
        /// </summary>
        [Test]
        public void GetCustomerDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? customerId = null;
            //var response = instance.GetCustomerDetails(customerId);
            //Assert.IsInstanceOf<Customer> (response, "response is Customer");
        }
        /// <summary>
        /// Test SearchCustomer
        /// </summary>
        [Test]
        public void SearchCustomerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string firstName = null;
            //string lastName = null;
            //var response = instance.SearchCustomer(firstName, lastName);
            //Assert.IsInstanceOf<List<Customer>> (response, "response is List<Customer>");
        }
        /// <summary>
        /// Test UpdateCustomer
        /// </summary>
        [Test]
        public void UpdateCustomerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RequestCustomer body = null;
            //long? customerId = null;
            //instance.UpdateCustomer(body, customerId);
            
        }
    }

}
