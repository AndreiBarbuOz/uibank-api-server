# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.models.base_model_ import Model
from app import util


class BankCard(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, date_start: date=None, date_end: date=None, name_on_card: str=None, pin: int=None, security_code: str=None, blocked: bool=None, self_url: str=None, account_url: str=None):  # noqa: E501
        """BankCard - a model defined in Swagger

        :param id: The id of this BankCard.  # noqa: E501
        :type id: int
        :param date_start: The date_start of this BankCard.  # noqa: E501
        :type date_start: date
        :param date_end: The date_end of this BankCard.  # noqa: E501
        :type date_end: date
        :param name_on_card: The name_on_card of this BankCard.  # noqa: E501
        :type name_on_card: str
        :param pin: The pin of this BankCard.  # noqa: E501
        :type pin: int
        :param security_code: The security_code of this BankCard.  # noqa: E501
        :type security_code: str
        :param blocked: The blocked of this BankCard.  # noqa: E501
        :type blocked: bool
        :param self_url: The self_url of this BankCard.  # noqa: E501
        :type self_url: str
        :param account_url: The account_url of this BankCard.  # noqa: E501
        :type account_url: str
        """
        self.swagger_types = {
            'id': int,
            'date_start': date,
            'date_end': date,
            'name_on_card': str,
            'pin': int,
            'security_code': str,
            'blocked': bool,
            'self_url': str,
            'account_url': str
        }

        self.attribute_map = {
            'id': 'id',
            'date_start': 'date_start',
            'date_end': 'date_end',
            'name_on_card': 'name_on_card',
            'pin': 'pin',
            'security_code': 'security_code',
            'blocked': 'blocked',
            'self_url': 'self_url',
            'account_url': 'account_url'
        }
        self._id = id
        self._date_start = date_start
        self._date_end = date_end
        self._name_on_card = name_on_card
        self._pin = pin
        self._security_code = security_code
        self._blocked = blocked
        self._self_url = self_url
        self._account_url = account_url

    @classmethod
    def from_dict(cls, dikt) -> 'BankCard':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BankCard of this BankCard.  # noqa: E501
        :rtype: BankCard
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this BankCard.


        :return: The id of this BankCard.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this BankCard.


        :param id: The id of this BankCard.
        :type id: int
        """

        self._id = id

    @property
    def date_start(self) -> date:
        """Gets the date_start of this BankCard.


        :return: The date_start of this BankCard.
        :rtype: date
        """
        return self._date_start

    @date_start.setter
    def date_start(self, date_start: date):
        """Sets the date_start of this BankCard.


        :param date_start: The date_start of this BankCard.
        :type date_start: date
        """

        self._date_start = date_start

    @property
    def date_end(self) -> date:
        """Gets the date_end of this BankCard.


        :return: The date_end of this BankCard.
        :rtype: date
        """
        return self._date_end

    @date_end.setter
    def date_end(self, date_end: date):
        """Sets the date_end of this BankCard.


        :param date_end: The date_end of this BankCard.
        :type date_end: date
        """

        self._date_end = date_end

    @property
    def name_on_card(self) -> str:
        """Gets the name_on_card of this BankCard.


        :return: The name_on_card of this BankCard.
        :rtype: str
        """
        return self._name_on_card

    @name_on_card.setter
    def name_on_card(self, name_on_card: str):
        """Sets the name_on_card of this BankCard.


        :param name_on_card: The name_on_card of this BankCard.
        :type name_on_card: str
        """

        self._name_on_card = name_on_card

    @property
    def pin(self) -> int:
        """Gets the pin of this BankCard.


        :return: The pin of this BankCard.
        :rtype: int
        """
        return self._pin

    @pin.setter
    def pin(self, pin: int):
        """Sets the pin of this BankCard.


        :param pin: The pin of this BankCard.
        :type pin: int
        """

        self._pin = pin

    @property
    def security_code(self) -> str:
        """Gets the security_code of this BankCard.


        :return: The security_code of this BankCard.
        :rtype: str
        """
        return self._security_code

    @security_code.setter
    def security_code(self, security_code: str):
        """Sets the security_code of this BankCard.


        :param security_code: The security_code of this BankCard.
        :type security_code: str
        """

        self._security_code = security_code

    @property
    def blocked(self) -> bool:
        """Gets the blocked of this BankCard.


        :return: The blocked of this BankCard.
        :rtype: bool
        """
        return self._blocked

    @blocked.setter
    def blocked(self, blocked: bool):
        """Sets the blocked of this BankCard.


        :param blocked: The blocked of this BankCard.
        :type blocked: bool
        """

        self._blocked = blocked

    @property
    def self_url(self) -> str:
        """Gets the self_url of this BankCard.


        :return: The self_url of this BankCard.
        :rtype: str
        """
        return self._self_url

    @self_url.setter
    def self_url(self, self_url: str):
        """Sets the self_url of this BankCard.


        :param self_url: The self_url of this BankCard.
        :type self_url: str
        """

        self._self_url = self_url

    @property
    def account_url(self) -> str:
        """Gets the account_url of this BankCard.


        :return: The account_url of this BankCard.
        :rtype: str
        """
        return self._account_url

    @account_url.setter
    def account_url(self, account_url: str):
        """Sets the account_url of this BankCard.


        :param account_url: The account_url of this BankCard.
        :type account_url: str
        """

        self._account_url = account_url
